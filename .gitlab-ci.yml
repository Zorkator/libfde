stages:
  - build
  - test

linux:
  tags: ["docker", "linux"]
  image: fedora:33
  stage: build
  before_script:
    - dnf install -y g++ gcc-gfortran cmake gcovr python3-pip
  script:
    - mkdir -p _build coverage
    - pushd _build
    - cmake -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=1 -DCMAKE_Fortran_FLAGS=--coverage -DCMAKE_C_FLAGS=--coverage -DCMAKE_CXX_FLAGS=--coverage ..
    - make
    - make test
    - gcovr -r .. src libfortres
    - gcovr -r .. src libfortres --xml=../coverage.xml --html-details=../coverage/coverage.html
    - popd
    - python3 -m pip install wheel
    - FDEPATH=_build/package/Debug/bin python3 setup.py bdist_wheel
  coverage: '/^TOTAL.*\s+(\d+\%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - coverage/
      - dist/


test_wheel:
  tags: ["docker", "linux"]
  image: fedora:33
  stage: test
  before_script:
    - dnf install -y gcc-gfortran python3-pip python3-virtualenv
  script:
    - virtualenv venv
    - source venv/bin/activate
    - python -m pip install dist/*.whl
    - python test/test_wheel_setup.py
  needs:
    - job: linux
      artifacts: true
